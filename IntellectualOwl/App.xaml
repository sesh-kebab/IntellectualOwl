<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:dockablz="clr-namespace:Dragablz.Dockablz;assembly=Dragablz"
             xmlns:converters="clr-namespace:Dragablz.Converters;assembly=Dragablz"
             xmlns:l="clr-namespace:IntellectualOwl"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" x:Class="IntellectualOwl.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/mahapps.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MahAppsTabablzControlStyle}">
                <Setter Property="NewItemFactory" Value="{Binding NewItemFactory}" />
                <Setter Property="ShowDefaultAddButton" Value="True" />
                <Setter Property="ShowDefaultCloseButton" Value="True" />
            </Style>

        	<Style x:Key="DropDownButtonStyle1" TargetType="{x:Type xctk:DropDownButton}">
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="IsTabStop" Value="False"/>
        		<Setter Property="HorizontalContentAlignment" Value="Center"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Background" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalBackgroundKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
        		<Setter Property="BorderBrush" Value="{DynamicResource {ComponentResourceKey ResourceId=ButtonNormalOuterBorderKey, TypeInTargetAssembly={x:Type Themes:ResourceKeys}}}"/>
        		<Setter Property="Padding" Value="3"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type xctk:DropDownButton}">
        					<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
        						<ToggleButton x:Name="PART_DropDownButton" Grid.Column="1" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
        							<ToggleButton.IsHitTestVisible>
        								<Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
        									<Binding.Converter>
        										<xctk:InverseBoolConverter/>
        									</Binding.Converter>
        								</Binding>
        							</ToggleButton.IsHitTestVisible>
        							<ToggleButton.Template>
        								<ControlTemplate TargetType="{x:Type ToggleButton}">
        									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
        								</ControlTemplate>
        							</ToggleButton.Template>
        							<Grid>
        								<xctk:ButtonChrome x:Name="ToggleButtonChrome" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" RenderMouseOver="{Binding IsMouseOver, ElementName=PART_DropDownButton}" RenderPressed="{Binding IsPressed, ElementName=PART_DropDownButton}" RenderChecked="{TemplateBinding IsOpen}" RenderEnabled="{TemplateBinding IsEnabled}">
        									<Grid>
        										<Grid.ColumnDefinitions>
        											<ColumnDefinition Width="*"/>
        											<ColumnDefinition Width="Auto"/>
        										</Grid.ColumnDefinitions>
        										<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        										<Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="4,3">
        											<Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Height="4" Width="7"/>
        										</Grid>
        									</Grid>
        								</xctk:ButtonChrome>
        							</Grid>
        						</ToggleButton>
        						<Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}" Placement="Bottom" StaysOpen="False" VerticalOffset="1">
        							<Border BorderBrush="#FFABADB3" BorderThickness="1">
        								<Border.Background>
        									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        										<GradientStop Color="#FFF0F0F0" Offset="0"/>
        										<GradientStop Color="#FFE5E5E5" Offset="1"/>
        									</LinearGradientBrush>
        								</Border.Background>
        								<ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding DropDownContent}"/>
        							</Border>
        						</Popup>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        							<Setter Property="Foreground" TargetName="ToggleButtonChrome" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>

        </ResourceDictionary>
        
    </Application.Resources>
</Application>
